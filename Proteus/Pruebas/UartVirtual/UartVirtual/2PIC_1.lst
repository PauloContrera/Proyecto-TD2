CCS PCM C Compiler, Version 5.025, 61357               01-dic.-21 03:36

               Filename:   P:\wamp64\www\Proyecto-TD2\Proteus\Pruebas\UartVirtual\UartVirtual\2PIC_1.lst

               ROM used:   242 words (3%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           10 (3%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0BC
0003:  NOP
.................... #include <16f887.h> 
.................... //////////// Standard Header file for the PIC16F887 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F887 
0004:  DATA C4,34
0005:  DATA E7,34
0006:  DATA F4,32
0007:  DATA 20,36
0008:  DATA 6F,10
0009:  DATA F1,3A
000A:  DATA 65,10
000B:  DATA E4,32
000C:  DATA F3,32
000D:  DATA 61,10
000E:  DATA ED,30
000F:  DATA 6E,32
0010:  DATA 61,39
0011:  DATA A0,30
0012:  DATA 6C,10
0013:  DATA D3,32
0014:  DATA E7,3A
0015:  DATA 6E,32
0016:  DATA 6F,10
0017:  DATA D0,24
0018:  DATA 43,1D
0019:  DATA A0,06
001A:  DATA 0A,00
*
003D:  MOVF   0B,W
003E:  MOVWF  22
003F:  BCF    0B.7
0040:  BSF    03.5
0041:  BSF    03.6
0042:  BSF    0C.7
0043:  BSF    0C.0
0044:  NOP
0045:  NOP
0046:  BCF    03.5
0047:  BCF    03.6
0048:  BTFSC  22.7
0049:  BSF    0B.7
004A:  BSF    03.6
004B:  MOVF   0C,W
004C:  ANDLW  7F
004D:  BTFSC  03.2
004E:  GOTO   091
004F:  BCF    03.6
0050:  MOVWF  22
0051:  BSF    03.6
0052:  MOVF   0D,W
0053:  BCF    03.6
0054:  MOVWF  23
0055:  BSF    03.6
0056:  MOVF   0F,W
0057:  BCF    03.6
0058:  MOVWF  24
0059:  MOVF   22,W
005A:  MOVWF  25
005B:  CALL   01B
005C:  MOVF   23,W
005D:  BSF    03.6
005E:  MOVWF  0D
005F:  BCF    03.6
0060:  MOVF   24,W
0061:  BSF    03.6
0062:  MOVWF  0F
0063:  BCF    03.6
0064:  MOVF   0B,W
0065:  MOVWF  25
0066:  BCF    0B.7
0067:  BSF    03.5
0068:  BSF    03.6
0069:  BSF    0C.7
006A:  BSF    0C.0
006B:  NOP
006C:  NOP
006D:  BCF    03.5
006E:  BCF    03.6
006F:  BTFSC  25.7
0070:  BSF    0B.7
0071:  BSF    03.6
0072:  RLF    0C,W
0073:  RLF    0E,W
0074:  ANDLW  7F
0075:  BTFSC  03.2
0076:  GOTO   091
0077:  BCF    03.6
0078:  MOVWF  22
0079:  BSF    03.6
007A:  MOVF   0D,W
007B:  BCF    03.6
007C:  MOVWF  23
007D:  BSF    03.6
007E:  MOVF   0F,W
007F:  BCF    03.6
0080:  MOVWF  24
0081:  MOVF   22,W
0082:  MOVWF  25
0083:  CALL   01B
0084:  MOVF   23,W
0085:  BSF    03.6
0086:  MOVWF  0D
0087:  BCF    03.6
0088:  MOVF   24,W
0089:  BSF    03.6
008A:  MOVWF  0F
008B:  INCF   0D,F
008C:  BTFSC  03.2
008D:  INCF   0F,F
008E:  BCF    03.6
008F:  GOTO   03D
0090:  BSF    03.6
0091:  BCF    03.6
0092:  BCF    0A.3
0093:  BCF    0A.4
0094:  GOTO   0E6 (RETURN)
....................  
.................... #list 
....................  
.................... #fuses xt,nowdt 
.................... #use delay(clock=4000000) 
....................  
.................... #use rs232(baud=57600, xmit=PIN_c6,rcv=PIN_c7,stream=PIC,parity=N, bits=8) 
.................... #use rs232(baud=9600,xmit=PIN_D0,rcv=PIN_D1,stream=PC, parity=N, bits=8) 
*
001B:  BSF    03.5
001C:  BCF    08.0
001D:  BCF    03.5
001E:  BCF    08.0
001F:  MOVLW  08
0020:  MOVWF  78
0021:  GOTO   022
0022:  NOP
0023:  BSF    78.7
0024:  GOTO   033
0025:  BCF    78.7
0026:  RRF    25,F
0027:  BTFSC  03.0
0028:  BSF    08.0
0029:  BTFSS  03.0
002A:  BCF    08.0
002B:  BSF    78.6
002C:  GOTO   033
002D:  BCF    78.6
002E:  DECFSZ 78,F
002F:  GOTO   026
0030:  GOTO   031
0031:  NOP
0032:  BSF    08.0
0033:  MOVLW  1C
0034:  MOVWF  04
0035:  DECFSZ 04,F
0036:  GOTO   035
0037:  GOTO   038
0038:  BTFSC  78.7
0039:  GOTO   025
003A:  BTFSC  78.6
003B:  GOTO   02D
003C:  RETURN
*
0095:  BSF    03.5
0096:  BSF    08.1
0097:  BCF    03.5
0098:  BTFSC  08.1
0099:  GOTO   098
009A:  MOVLW  08
009B:  MOVWF  77
009C:  CLRF   22
009D:  BSF    77.7
009E:  GOTO   0AD
009F:  BCF    77.7
00A0:  GOTO   0AD
00A1:  BCF    03.0
00A2:  BTFSC  08.1
00A3:  BSF    03.0
00A4:  RRF    22,F
00A5:  BSF    77.6
00A6:  GOTO   0AD
00A7:  BCF    77.6
00A8:  DECFSZ 77,F
00A9:  GOTO   0A1
00AA:  MOVF   22,W
00AB:  MOVWF  78
00AC:  GOTO   0B9
00AD:  MOVLW  1C
00AE:  BTFSC  77.7
00AF:  MOVLW  07
00B0:  MOVWF  78
00B1:  DECFSZ 78,F
00B2:  GOTO   0B1
00B3:  NOP
00B4:  BTFSC  77.7
00B5:  GOTO   09F
00B6:  BTFSC  77.6
00B7:  GOTO   0A7
00B8:  GOTO   0A1
00B9:  BCF    0A.3
00BA:  BCF    0A.4
00BB:  GOTO   0E7 (RETURN)
....................  
....................  
.................... void main() 
00BC:  MOVF   03,W
00BD:  ANDLW  1F
00BE:  MOVWF  03
00BF:  BSF    03.5
00C0:  BSF    03.6
00C1:  BSF    07.3
00C2:  MOVLW  10
00C3:  BCF    03.6
00C4:  MOVWF  19
00C5:  MOVLW  00
00C6:  MOVWF  1A
00C7:  MOVLW  A6
00C8:  MOVWF  18
00C9:  MOVLW  90
00CA:  BCF    03.5
00CB:  MOVWF  18
00CC:  BSF    03.5
00CD:  BCF    08.0
00CE:  BCF    03.5
00CF:  BSF    08.0
00D0:  BSF    03.5
00D1:  BSF    03.6
00D2:  MOVF   09,W
00D3:  ANDLW  C0
00D4:  MOVWF  09
00D5:  BCF    03.6
00D6:  BCF    1F.4
00D7:  BCF    1F.5
00D8:  MOVLW  00
00D9:  BSF    03.6
00DA:  MOVWF  08
00DB:  BCF    03.5
00DC:  CLRF   07
00DD:  CLRF   08
00DE:  CLRF   09
00DF:  BCF    03.7
.................... { 
....................  char c; 
....................  fprintf(PC,"Digite lo que desea mandar al Segundo PIC: \r\n"); 
00E0:  MOVLW  04
00E1:  MOVWF  0D
00E2:  MOVLW  00
00E3:  MOVWF  0F
00E4:  BCF    03.6
00E5:  GOTO   03D
....................  while(1) 
....................  { 
....................   c=fgetc(PC); // lee desde el computador 
00E6:  GOTO   095
00E7:  MOVF   78,W
00E8:  MOVWF  21
....................   fprintf(PC,"%c",c); //Muestra el Caracter recibido en el PC 
00E9:  MOVF   21,W
00EA:  MOVWF  25
00EB:  CALL   01B
....................   fprintf(PIC,"%c",c); //Manda el caracter al segundo PIC 
00EC:  MOVF   21,W
00ED:  BTFSS  0C.4
00EE:  GOTO   0ED
00EF:  MOVWF  19
00F0:  GOTO   0E6
....................  } 
....................  
.................... } 
00F1:  SLEEP

Configuration Fuses:
   Word  1: 2FE1   XT NOWDT PUT MCLR NOPROTECT NOCPD BROWNOUT IESO FCMEN NOLVP NODEBUG
   Word  2: 3FFF   BORV40 NOWRT
