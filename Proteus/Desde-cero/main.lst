CCS PCH C Compiler, Version 5.076, 56587               30-sep.-21 21:33

               Filename:   P:\wamp64\www\Proyecto-TD2\Proteus\Desde-cero\main.lst

               ROM used:   1502 bytes (5%)
                           Largest free fragment is 31266
               RAM used:   16 (1%) at main() level
                           64 (3%) worst case
               Stack used: 0 locations
               Stack size: 31

*
0000:  GOTO   0590
.................... #include <main.h> 
.................... #include <18F2550.h> 
.................... //////////// Standard Header file for the PIC18F2550 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2014 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC18F2550 
0004:  CLRF   FF7
0006:  ADDLW  14
0008:  MOVWF  FF6
000A:  MOVLW  00
000C:  ADDWFC FF7,F
000E:  TBLRD*+
0010:  MOVF   FF5,W
0012:  RETURN 0
0014:  DATA 80,F1
0016:  DATA 44,60
0018:  DATA 31,22
001A:  DATA 02,F0
001C:  DATA 00,30
001E:  CLRF   FF7
0020:  ADDLW  2E
0022:  MOVWF  FF6
0024:  MOVLW  00
0026:  ADDWFC FF7,F
0028:  TBLRD*+
002A:  MOVF   FF5,W
002C:  RETURN 0
002E:  DATA 0C,20
0030:  DATA 44,84
0032:  MOVLW  8E
0034:  MOVWF  00
0036:  MOVF   2C,W
0038:  SUBWF  00,F
003A:  MOVFF  2D,02
003E:  MOVFF  2E,01
0042:  BSF    02.7
0044:  MOVF   00,F
0046:  BZ    005A
0048:  BCF    FD8.0
004A:  MOVF   02,F
004C:  BNZ   0052
004E:  MOVF   01,F
0050:  BZ    005A
0052:  RRCF   02,F
0054:  RRCF   01,F
0056:  DECFSZ 00,F
0058:  BRA    0048
005A:  BTFSS  2D.7
005C:  BRA    0068
005E:  COMF   01,F
0060:  COMF   02,F
0062:  INCF   01,F
0064:  BTFSC  FD8.2
0066:  INCF   02,F
0068:  RETURN 0
006A:  MOVF   2C,W
006C:  BTFSC  FD8.2
006E:  BRA    0152
0070:  MOVWF  00
0072:  MOVF   30,W
0074:  BTFSC  FD8.2
0076:  BRA    0152
0078:  ADDWF  00,F
007A:  BNC   0084
007C:  MOVLW  81
007E:  ADDWF  00,F
0080:  BC    0152
0082:  BRA    008C
0084:  MOVLW  7F
0086:  SUBWF  00,F
0088:  BNC   0152
008A:  BZ    0152
008C:  MOVFF  2D,34
0090:  MOVF   31,W
0092:  XORWF  34,F
0094:  BSF    2D.7
0096:  BSF    31.7
0098:  MOVF   2F,W
009A:  MULWF  33
009C:  MOVFF  FF4,36
00A0:  MOVF   2E,W
00A2:  MULWF  32
00A4:  MOVFF  FF4,03
00A8:  MOVFF  FF3,35
00AC:  MULWF  33
00AE:  MOVF   FF3,W
00B0:  ADDWF  36,F
00B2:  MOVF   FF4,W
00B4:  ADDWFC 35,F
00B6:  MOVLW  00
00B8:  ADDWFC 03,F
00BA:  MOVF   2F,W
00BC:  MULWF  32
00BE:  MOVF   FF3,W
00C0:  ADDWF  36,F
00C2:  MOVF   FF4,W
00C4:  ADDWFC 35,F
00C6:  MOVLW  00
00C8:  CLRF   02
00CA:  ADDWFC 03,F
00CC:  ADDWFC 02,F
00CE:  MOVF   2D,W
00D0:  MULWF  33
00D2:  MOVF   FF3,W
00D4:  ADDWF  35,F
00D6:  MOVF   FF4,W
00D8:  ADDWFC 03,F
00DA:  MOVLW  00
00DC:  ADDWFC 02,F
00DE:  MOVF   2D,W
00E0:  MULWF  32
00E2:  MOVF   FF3,W
00E4:  ADDWF  03,F
00E6:  MOVF   FF4,W
00E8:  ADDWFC 02,F
00EA:  MOVLW  00
00EC:  CLRF   01
00EE:  ADDWFC 01,F
00F0:  MOVF   2F,W
00F2:  MULWF  31
00F4:  MOVF   FF3,W
00F6:  ADDWF  35,F
00F8:  MOVF   FF4,W
00FA:  ADDWFC 03,F
00FC:  MOVLW  00
00FE:  ADDWFC 02,F
0100:  ADDWFC 01,F
0102:  MOVF   2E,W
0104:  MULWF  31
0106:  MOVF   FF3,W
0108:  ADDWF  03,F
010A:  MOVF   FF4,W
010C:  ADDWFC 02,F
010E:  MOVLW  00
0110:  ADDWFC 01,F
0112:  MOVF   2D,W
0114:  MULWF  31
0116:  MOVF   FF3,W
0118:  ADDWF  02,F
011A:  MOVF   FF4,W
011C:  ADDWFC 01,F
011E:  INCF   00,F
0120:  BTFSC  01.7
0122:  BRA    012E
0124:  RLCF   35,F
0126:  RLCF   03,F
0128:  RLCF   02,F
012A:  RLCF   01,F
012C:  DECF   00,F
012E:  MOVLW  00
0130:  BTFSS  35.7
0132:  BRA    0148
0134:  INCF   03,F
0136:  ADDWFC 02,F
0138:  ADDWFC 01,F
013A:  MOVF   01,W
013C:  BNZ   0148
013E:  MOVF   02,W
0140:  BNZ   0148
0142:  MOVF   03,W
0144:  BNZ   0148
0146:  INCF   00,F
0148:  BTFSC  34.7
014A:  BSF    01.7
014C:  BTFSS  34.7
014E:  BCF    01.7
0150:  BRA    015A
0152:  CLRF   00
0154:  CLRF   01
0156:  CLRF   02
0158:  CLRF   03
015A:  GOTO   0466 (RETURN)
015E:  MOVLW  8E
0160:  MOVWF  00
0162:  MOVFF  31,01
0166:  MOVFF  30,02
016A:  CLRF   03
016C:  MOVF   01,F
016E:  BNZ   0182
0170:  MOVFF  02,01
0174:  CLRF   02
0176:  MOVLW  08
0178:  SUBWF  00,F
017A:  MOVF   01,F
017C:  BNZ   0182
017E:  CLRF   00
0180:  BRA    0192
0182:  BCF    FD8.0
0184:  BTFSC  01.7
0186:  BRA    0190
0188:  RLCF   02,F
018A:  RLCF   01,F
018C:  DECF   00,F
018E:  BRA    0182
0190:  BCF    01.7
0192:  GOTO   0482 (RETURN)
0196:  MOVLW  80
0198:  BTFSC  FD8.1
019A:  XORWF  35,F
019C:  CLRF   3A
019E:  CLRF   3B
01A0:  MOVFF  31,39
01A4:  MOVF   35,W
01A6:  XORWF  39,F
01A8:  MOVF   30,W
01AA:  BTFSC  FD8.2
01AC:  BRA    0366
01AE:  MOVWF  38
01B0:  MOVWF  00
01B2:  MOVF   34,W
01B4:  BTFSC  FD8.2
01B6:  BRA    0378
01B8:  SUBWF  38,F
01BA:  BTFSC  FD8.2
01BC:  BRA    02C0
01BE:  BNC   023A
01C0:  MOVFF  35,3E
01C4:  BSF    3E.7
01C6:  MOVFF  36,3D
01CA:  MOVFF  37,3C
01CE:  CLRF   3B
01D0:  BCF    FD8.0
01D2:  RRCF   3E,F
01D4:  RRCF   3D,F
01D6:  RRCF   3C,F
01D8:  RRCF   3B,F
01DA:  DECFSZ 38,F
01DC:  BRA    01CE
01DE:  BTFSS  39.7
01E0:  BRA    01E8
01E2:  BSF    3A.0
01E4:  BRA    03A0
01E6:  BCF    3A.0
01E8:  BCF    38.0
01EA:  BSF    3A.4
01EC:  CLRF   FEA
01EE:  MOVLW  33
01F0:  MOVWF  FE9
01F2:  BRA    03C6
01F4:  BCF    3A.4
01F6:  BTFSC  39.7
01F8:  BRA    020E
01FA:  BTFSS  38.0
01FC:  BRA    0224
01FE:  RRCF   3E,F
0200:  RRCF   3D,F
0202:  RRCF   3C,F
0204:  RRCF   3B,F
0206:  INCF   00,F
0208:  BTFSC  FD8.2
020A:  BRA    0396
020C:  BRA    0224
020E:  BTFSC  3E.7
0210:  BRA    022A
0212:  BCF    FD8.0
0214:  RLCF   3B,F
0216:  RLCF   3C,F
0218:  RLCF   3D,F
021A:  RLCF   3E,F
021C:  DECF   00,F
021E:  BTFSC  FD8.2
0220:  BRA    0396
0222:  BRA    020E
0224:  BSF    3A.6
0226:  BRA    02FE
0228:  BCF    3A.6
022A:  MOVFF  31,39
022E:  BTFSS  31.7
0230:  BRA    0236
0232:  BSF    3E.7
0234:  BRA    0388
0236:  BCF    3E.7
0238:  BRA    0388
023A:  MOVFF  34,38
023E:  MOVFF  34,00
0242:  MOVF   30,W
0244:  SUBWF  38,F
0246:  MOVFF  31,3E
024A:  BSF    3E.7
024C:  MOVFF  32,3D
0250:  MOVFF  33,3C
0254:  CLRF   3B
0256:  BCF    FD8.0
0258:  RRCF   3E,F
025A:  RRCF   3D,F
025C:  RRCF   3C,F
025E:  RRCF   3B,F
0260:  DECFSZ 38,F
0262:  BRA    0254
0264:  BTFSS  39.7
0266:  BRA    026E
0268:  BSF    3A.1
026A:  BRA    03A0
026C:  BCF    3A.1
026E:  BCF    38.0
0270:  BSF    3A.5
0272:  CLRF   FEA
0274:  MOVLW  37
0276:  MOVWF  FE9
0278:  BRA    03C6
027A:  BCF    3A.5
027C:  BTFSC  39.7
027E:  BRA    0294
0280:  BTFSS  38.0
0282:  BRA    02AA
0284:  RRCF   3E,F
0286:  RRCF   3D,F
0288:  RRCF   3C,F
028A:  RRCF   3B,F
028C:  INCF   00,F
028E:  BTFSC  FD8.2
0290:  BRA    0396
0292:  BRA    02AA
0294:  BTFSC  3E.7
0296:  BRA    02B0
0298:  BCF    FD8.0
029A:  RLCF   3B,F
029C:  RLCF   3C,F
029E:  RLCF   3D,F
02A0:  RLCF   3E,F
02A2:  DECF   00,F
02A4:  BTFSC  FD8.2
02A6:  BRA    0396
02A8:  BRA    0294
02AA:  BSF    3A.7
02AC:  BRA    02FE
02AE:  BCF    3A.7
02B0:  MOVFF  35,39
02B4:  BTFSS  35.7
02B6:  BRA    02BC
02B8:  BSF    3E.7
02BA:  BRA    0388
02BC:  BCF    3E.7
02BE:  BRA    0388
02C0:  MOVFF  35,3E
02C4:  BSF    3E.7
02C6:  MOVFF  36,3D
02CA:  MOVFF  37,3C
02CE:  BTFSS  39.7
02D0:  BRA    02DA
02D2:  BCF    3E.7
02D4:  BSF    3A.2
02D6:  BRA    03A0
02D8:  BCF    3A.2
02DA:  CLRF   3B
02DC:  BCF    38.0
02DE:  CLRF   FEA
02E0:  MOVLW  33
02E2:  MOVWF  FE9
02E4:  BRA    03C6
02E6:  BTFSC  39.7
02E8:  BRA    0322
02EA:  MOVFF  31,39
02EE:  BTFSS  38.0
02F0:  BRA    02FE
02F2:  RRCF   3E,F
02F4:  RRCF   3D,F
02F6:  RRCF   3C,F
02F8:  RRCF   3B,F
02FA:  INCF   00,F
02FC:  BZ    0396
02FE:  BTFSS  3B.7
0300:  BRA    0318
0302:  INCF   3C,F
0304:  BNZ   0318
0306:  INCF   3D,F
0308:  BNZ   0318
030A:  INCF   3E,F
030C:  BNZ   0318
030E:  RRCF   3E,F
0310:  RRCF   3D,F
0312:  RRCF   3C,F
0314:  INCF   00,F
0316:  BZ    0396
0318:  BTFSC  3A.6
031A:  BRA    0228
031C:  BTFSC  3A.7
031E:  BRA    02AE
0320:  BRA    035A
0322:  MOVLW  80
0324:  XORWF  3E,F
0326:  BTFSS  3E.7
0328:  BRA    0332
032A:  BRA    03A0
032C:  MOVFF  35,39
0330:  BRA    0346
0332:  MOVFF  31,39
0336:  MOVF   3E,F
0338:  BNZ   0346
033A:  MOVF   3D,F
033C:  BNZ   0346
033E:  MOVF   3C,F
0340:  BNZ   0346
0342:  CLRF   00
0344:  BRA    0388
0346:  BTFSC  3E.7
0348:  BRA    035A
034A:  BCF    FD8.0
034C:  RLCF   3B,F
034E:  RLCF   3C,F
0350:  RLCF   3D,F
0352:  RLCF   3E,F
0354:  DECFSZ 00,F
0356:  BRA    0346
0358:  BRA    0396
035A:  BTFSS  39.7
035C:  BRA    0362
035E:  BSF    3E.7
0360:  BRA    0388
0362:  BCF    3E.7
0364:  BRA    0388
0366:  MOVFF  34,00
036A:  MOVFF  35,3E
036E:  MOVFF  36,3D
0372:  MOVFF  37,3C
0376:  BRA    0388
0378:  MOVFF  30,00
037C:  MOVFF  31,3E
0380:  MOVFF  32,3D
0384:  MOVFF  33,3C
0388:  MOVFF  3E,01
038C:  MOVFF  3D,02
0390:  MOVFF  3C,03
0394:  BRA    03FE
0396:  CLRF   00
0398:  CLRF   01
039A:  CLRF   02
039C:  CLRF   03
039E:  BRA    03FE
03A0:  CLRF   3B
03A2:  COMF   3C,F
03A4:  COMF   3D,F
03A6:  COMF   3E,F
03A8:  COMF   3B,F
03AA:  INCF   3B,F
03AC:  BNZ   03B8
03AE:  INCF   3C,F
03B0:  BNZ   03B8
03B2:  INCF   3D,F
03B4:  BNZ   03B8
03B6:  INCF   3E,F
03B8:  BTFSC  3A.0
03BA:  BRA    01E6
03BC:  BTFSC  3A.1
03BE:  BRA    026C
03C0:  BTFSC  3A.2
03C2:  BRA    02D8
03C4:  BRA    032C
03C6:  MOVF   FEF,W
03C8:  ADDWF  3C,F
03CA:  BNC   03D6
03CC:  INCF   3D,F
03CE:  BNZ   03D6
03D0:  INCF   3E,F
03D2:  BTFSC  FD8.2
03D4:  BSF    38.0
03D6:  MOVF   FED,F
03D8:  MOVF   FEF,W
03DA:  ADDWF  3D,F
03DC:  BNC   03E4
03DE:  INCF   3E,F
03E0:  BTFSC  FD8.2
03E2:  BSF    38.0
03E4:  MOVF   FED,F
03E6:  MOVF   FEF,W
03E8:  BTFSC  FEF.7
03EA:  BRA    03EE
03EC:  XORLW  80
03EE:  ADDWF  3E,F
03F0:  BTFSC  FD8.0
03F2:  BSF    38.0
03F4:  BTFSC  3A.4
03F6:  BRA    01F4
03F8:  BTFSC  3A.5
03FA:  BRA    027A
03FC:  BRA    02E6
03FE:  GOTO   04A6 (RETURN)
0402:  MOVF   2F,W
0404:  CLRF   01
0406:  SUBWF  2E,W
0408:  BC    0410
040A:  MOVFF  2E,00
040E:  BRA    0428
0410:  CLRF   00
0412:  MOVLW  08
0414:  MOVWF  30
0416:  RLCF   2E,F
0418:  RLCF   00,F
041A:  MOVF   2F,W
041C:  SUBWF  00,W
041E:  BTFSC  FD8.0
0420:  MOVWF  00
0422:  RLCF   01,F
0424:  DECFSZ 30,F
0426:  BRA    0416
0428:  RETURN 0
....................  
.................... #list 
....................  
.................... #device ADC=10 
....................  
....................  
.................... #FUSES XT, NOWDT, PUT, NOMCLR,BROWNOUT,NOLVP                    //No Watch Dog Timer 
....................  
.................... //#use delay(internal=4MHz) 
.................... #use delay(internal=4Mhz,clock_out) 
*
0534:  CLRF   FEA
0536:  MOVLW  13
0538:  MOVWF  FE9
053A:  MOVF   FEF,W
053C:  BZ    055A
053E:  MOVLW  01
0540:  MOVWF  01
0542:  CLRF   00
0544:  DECFSZ 00,F
0546:  BRA    0544
0548:  DECFSZ 01,F
054A:  BRA    0542
054C:  MOVLW  4A
054E:  MOVWF  00
0550:  DECFSZ 00,F
0552:  BRA    0550
0554:  BRA    0556
0556:  DECFSZ FEF,F
0558:  BRA    053E
055A:  GOTO   0588 (RETURN)
....................  
.................... #DEFINE LED PORTB,0 
.................... #byte PORTC= 0xf82 
.................... #byte PORTB= 0xf81 
.................... #byte PORTA= 0xf80 
....................  
....................  
.................... BYTE CONST Display[10]={0x080,0x0F1,0x044,0x060,0x031,0x022,0x002,0x0F0,0x000,0x030}; 
.................... BYTE CONST Columnas[4]={0x00C,0x020,0x044,0x084}; 
.................... //int dato[4]={5,9,6,3}; 
.................... float numerico=56.13; 
.................... int dato[4]; 
....................  
.................... void muestra(int dato[4]){ 
.................... for (int i=0;i<4;i++) { 
055E:  CLRF   12
0560:  MOVF   12,W
0562:  SUBLW  03
0564:  BNC   058C
....................          PORTB=Columnas[i]; 
0566:  CLRF   03
0568:  MOVF   12,W
056A:  RCALL  001E
056C:  MOVWF  F81
....................          PORTC=Display[dato[i]]; 
056E:  MOVF   12,W
0570:  ADDWF  10,W
0572:  MOVWF  FE9
0574:  MOVLW  00
0576:  ADDWFC 11,W
0578:  MOVWF  FEA
057A:  CLRF   03
057C:  MOVF   FEF,W
057E:  RCALL  0004
0580:  MOVWF  F82
....................          DELAY_MS(10); 
0582:  MOVLW  0A
0584:  MOVWF  13
0586:  BRA    0534
0588:  INCF   12,F
058A:  BRA    0560
....................    } 
....................    return; 
058C:  GOTO   05DA (RETURN)
.................... } 
.................... void convertirdato(float numero){ 
*
042A:  CLRF   28
042C:  CLRF   29
042E:  CLRF   2A
0430:  CLRF   2B
....................  
.................... int cifras[10]; 
....................    int cifras2[10]; 
....................    int i=0; 
....................    int j=0; 
....................    int aux=0; 
....................    int aux2=0; 
....................     
....................    aux=numero; 
0432:  MOVFF  13,2F
0436:  MOVFF  12,2E
043A:  MOVFF  11,2D
043E:  MOVFF  10,2C
0442:  RCALL  0032
0444:  MOVFF  01,2A
....................    aux2=(numero*100)-(aux*100); 
0448:  MOVFF  13,2F
044C:  MOVFF  12,2E
0450:  MOVFF  11,2D
0454:  MOVFF  10,2C
0458:  CLRF   33
045A:  CLRF   32
045C:  MOVLW  48
045E:  MOVWF  31
0460:  MOVLW  85
0462:  MOVWF  30
0464:  BRA    006A
0466:  MOVFF  03,2F
046A:  MOVFF  02,2E
046E:  MOVFF  01,2D
0472:  MOVFF  00,2C
0476:  MOVF   2A,W
0478:  MULLW  64
047A:  MOVF   FF3,W
047C:  CLRF   31
047E:  MOVWF  30
0480:  BRA    015E
0482:  BSF    FD8.1
0484:  MOVFF  2F,33
0488:  MOVFF  2E,32
048C:  MOVFF  2D,31
0490:  MOVFF  2C,30
0494:  MOVFF  03,37
0498:  MOVFF  02,36
049C:  MOVFF  01,35
04A0:  MOVFF  00,34
04A4:  BRA    0196
04A6:  MOVFF  03,2F
04AA:  MOVFF  02,2E
04AE:  MOVFF  01,2D
04B2:  MOVFF  00,2C
04B6:  RCALL  0032
04B8:  MOVFF  01,2B
....................  
....................    while (aux2>0) { 
04BC:  MOVF   2B,F
04BE:  BZ    04EE
....................       cifras2[j]=aux2%10; 
04C0:  CLRF   03
04C2:  MOVF   29,W
04C4:  ADDLW  1E
04C6:  MOVWF  FE9
04C8:  MOVLW  00
04CA:  ADDWFC 03,W
04CC:  MOVWF  FEA
04CE:  MOVFF  2B,2E
04D2:  MOVLW  0A
04D4:  MOVWF  2F
04D6:  RCALL  0402
04D8:  MOVFF  00,FEF
....................       aux2=aux2/10; 
04DC:  MOVFF  2B,2E
04E0:  MOVLW  0A
04E2:  MOVWF  2F
04E4:  RCALL  0402
04E6:  MOVFF  01,2B
....................       j++; 
04EA:  INCF   29,F
04EC:  BRA    04BC
....................    } 
....................    while (aux>0) { 
04EE:  MOVF   2A,F
04F0:  BZ    0520
....................       cifras[i]=aux%10; 
04F2:  CLRF   03
04F4:  MOVF   28,W
04F6:  ADDLW  14
04F8:  MOVWF  FE9
04FA:  MOVLW  00
04FC:  ADDWFC 03,W
04FE:  MOVWF  FEA
0500:  MOVFF  2A,2E
0504:  MOVLW  0A
0506:  MOVWF  2F
0508:  RCALL  0402
050A:  MOVFF  00,FEF
....................       aux=aux/10; 
050E:  MOVFF  2A,2E
0512:  MOVLW  0A
0514:  MOVWF  2F
0516:  RCALL  0402
0518:  MOVFF  01,2A
....................       i++; 
051C:  INCF   28,F
051E:  BRA    04EE
....................    } 
....................    dato[0]=cifras[1]; 
0520:  MOVFF  15,08
....................    dato[1]=cifras[0]; 
0524:  MOVFF  14,09
....................    dato[2]=cifras2[1]; 
0528:  MOVFF  1F,0A
....................    dato[3]=cifras2[0]; 
052C:  MOVFF  1E,0B
....................  
....................    return; 
0530:  GOTO   05D2 (RETURN)
.................... } 
....................  
....................  
.................... void main() 
*
0590:  CLRF   FF8
0592:  BCF    FD0.7
0594:  MOVLW  60
0596:  MOVWF  FD3
0598:  MOVF   FD3,W
059A:  MOVLW  1F
059C:  MOVWF  07
059E:  MOVLW  85
05A0:  MOVWF  06
05A2:  MOVLW  60
05A4:  MOVWF  05
05A6:  MOVLW  84
05A8:  MOVWF  04
05AA:  MOVF   FC1,W
05AC:  ANDLW  C0
05AE:  IORLW  0F
05B0:  MOVWF  FC1
05B2:  MOVLW  07
05B4:  MOVWF  FB4
.................... { 
....................    SET_TRIS_C(0000000); 
05B6:  MOVLW  00
05B8:  MOVWF  F94
....................    SET_TRIS_B(00000000); 
05BA:  MOVWF  F93
....................    PORTB=0; 
05BC:  CLRF   F81
....................    PORTA=0; 
05BE:  CLRF   F80
....................    int d[4]; 
....................    while(TRUE) 
....................    { 
....................    convertirdato(numerico); 
05C0:  MOVFF  07,13
05C4:  MOVFF  06,12
05C8:  MOVFF  05,11
05CC:  MOVFF  04,10
05D0:  BRA    042A
....................    muestra(dato); 
05D2:  CLRF   11
05D4:  MOVLW  08
05D6:  MOVWF  10
05D8:  BRA    055E
05DA:  BRA    05C0
....................  
....................    } 
....................  
.................... } 
....................  
05DC:  SLEEP 
....................  
....................  

Configuration Fuses:
   Word  1: C927   PLL12 CPUDIV1 USBDIV INTRC FCMEN IESO
   Word  2: 1E3E   PUT BROWNOUT BORV21 VREGEN NOWDT WDT32768
   Word  3: 0700   CCP2C1 PBADEN LPT1OSC NOMCLR
   Word  4: 0081   STVREN NOLVP NOXINST NODEBUG
   Word  5: C00F   NOPROTECT NOCPB NOCPD
   Word  6: E00F   NOWRT NOWRTC NOWRTB NOWRTD
   Word  7: 400F   NOEBTR NOEBTRB
